// Generated by view binder compiler. Do not edit!
package com.example.a2340collegescheduler.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.a2340collegescheduler.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCreateExamBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button addExamButton;

  @NonNull
  public final CheckBox checkFriday;

  @NonNull
  public final CheckBox checkMonday;

  @NonNull
  public final CheckBox checkSaturday;

  @NonNull
  public final CheckBox checkSunday;

  @NonNull
  public final CheckBox checkThursday;

  @NonNull
  public final CheckBox checkTuesday;

  @NonNull
  public final CheckBox checkWednesday;

  @NonNull
  public final LinearLayout checkboxGroup;

  @NonNull
  public final EditText editCourseName;

  @NonNull
  public final EditText editLocation;

  @NonNull
  public final EditText editTime;

  @NonNull
  public final Spinner spinnerAMPM;

  private ActivityCreateExamBinding(@NonNull RelativeLayout rootView, @NonNull Button addExamButton,
      @NonNull CheckBox checkFriday, @NonNull CheckBox checkMonday, @NonNull CheckBox checkSaturday,
      @NonNull CheckBox checkSunday, @NonNull CheckBox checkThursday,
      @NonNull CheckBox checkTuesday, @NonNull CheckBox checkWednesday,
      @NonNull LinearLayout checkboxGroup, @NonNull EditText editCourseName,
      @NonNull EditText editLocation, @NonNull EditText editTime, @NonNull Spinner spinnerAMPM) {
    this.rootView = rootView;
    this.addExamButton = addExamButton;
    this.checkFriday = checkFriday;
    this.checkMonday = checkMonday;
    this.checkSaturday = checkSaturday;
    this.checkSunday = checkSunday;
    this.checkThursday = checkThursday;
    this.checkTuesday = checkTuesday;
    this.checkWednesday = checkWednesday;
    this.checkboxGroup = checkboxGroup;
    this.editCourseName = editCourseName;
    this.editLocation = editLocation;
    this.editTime = editTime;
    this.spinnerAMPM = spinnerAMPM;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreateExamBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreateExamBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_create_exam, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreateExamBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addExamButton;
      Button addExamButton = ViewBindings.findChildViewById(rootView, id);
      if (addExamButton == null) {
        break missingId;
      }

      id = R.id.checkFriday;
      CheckBox checkFriday = ViewBindings.findChildViewById(rootView, id);
      if (checkFriday == null) {
        break missingId;
      }

      id = R.id.checkMonday;
      CheckBox checkMonday = ViewBindings.findChildViewById(rootView, id);
      if (checkMonday == null) {
        break missingId;
      }

      id = R.id.checkSaturday;
      CheckBox checkSaturday = ViewBindings.findChildViewById(rootView, id);
      if (checkSaturday == null) {
        break missingId;
      }

      id = R.id.checkSunday;
      CheckBox checkSunday = ViewBindings.findChildViewById(rootView, id);
      if (checkSunday == null) {
        break missingId;
      }

      id = R.id.checkThursday;
      CheckBox checkThursday = ViewBindings.findChildViewById(rootView, id);
      if (checkThursday == null) {
        break missingId;
      }

      id = R.id.checkTuesday;
      CheckBox checkTuesday = ViewBindings.findChildViewById(rootView, id);
      if (checkTuesday == null) {
        break missingId;
      }

      id = R.id.checkWednesday;
      CheckBox checkWednesday = ViewBindings.findChildViewById(rootView, id);
      if (checkWednesday == null) {
        break missingId;
      }

      id = R.id.checkboxGroup;
      LinearLayout checkboxGroup = ViewBindings.findChildViewById(rootView, id);
      if (checkboxGroup == null) {
        break missingId;
      }

      id = R.id.editCourseName;
      EditText editCourseName = ViewBindings.findChildViewById(rootView, id);
      if (editCourseName == null) {
        break missingId;
      }

      id = R.id.editLocation;
      EditText editLocation = ViewBindings.findChildViewById(rootView, id);
      if (editLocation == null) {
        break missingId;
      }

      id = R.id.editTime;
      EditText editTime = ViewBindings.findChildViewById(rootView, id);
      if (editTime == null) {
        break missingId;
      }

      id = R.id.spinnerAMPM;
      Spinner spinnerAMPM = ViewBindings.findChildViewById(rootView, id);
      if (spinnerAMPM == null) {
        break missingId;
      }

      return new ActivityCreateExamBinding((RelativeLayout) rootView, addExamButton, checkFriday,
          checkMonday, checkSaturday, checkSunday, checkThursday, checkTuesday, checkWednesday,
          checkboxGroup, editCourseName, editLocation, editTime, spinnerAMPM);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
